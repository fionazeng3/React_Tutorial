{"ast":null,"code":"var _jsxFileName = \"/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n/*\nuseEffect: Allows function components to use something like lifecycle \nmethods\nwe configure the hook to run some code automatically in one of the three scenarios:\n1. when the component is rendered for the first time only\n2. when the component is rendered for the first time and whenever it renders\n3. when the component is rendered for the first time and whenever (it renders\nand when some piece of data has changed)\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [term, setTerm] = useState('programming');\n  const [results, setResults] = useState([]);\n  /*\n  Second argument of useEffect can be:\n  1. nothing: run at initial render and after every render\n  2. empty array: run at initial render only\n  3. array with elements: run at initial render, run after every render if data has changed\n  */\n  // we cannot use async and await keywords in the useEffect function\n\n  useEffect(() => {\n    const search = async () => {\n      const {\n        data\n      } = await axios.get('https://en.wikipedia.org/w/api.php', {\n        params: {\n          action: 'query',\n          list: 'search',\n          origin: '*',\n          format: 'json',\n          srsearch: term\n        }\n      });\n      setResults(data.query.search);\n    };\n\n    setTimeout(() => {\n      if (term) {\n        search();\n      }\n    }, 500);\n  }, [term]);\n  const renderedResults = results.map(result => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"ui button\",\n          href: `https://en.wikipedia.org?curid=${result.pageid}`,\n          children: \"Go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: result.snippet\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, result.pageid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  } // __html: XSS Attack : can be used to run maliciously injected html\n  // only use this one with trusted contents\n  );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Search Term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: term,\n          onChange: e => setTerm(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui celled list\",\n      children: renderedResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"kf7Aulin8zsDW8AXvE79A+4tIFc=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Search.js"],"names":["React","useState","useEffect","axios","Search","term","setTerm","results","setResults","search","data","get","params","action","list","origin","format","srsearch","query","setTimeout","renderedResults","map","result","pageid","title","__html","snippet","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,aAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEA;AACJ;AACA;AACA;AACA;AACA;AAEI;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,MAAM,GAAG,YAAY;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAY,MAAMP,KAAK,CAACQ,GAAN,CAAU,oCAAV,EAAgD;AACpEC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE,OADJ;AAEJC,UAAAA,IAAI,EAAE,QAFF;AAGJC,UAAAA,MAAM,EAAE,GAHJ;AAIJC,UAAAA,MAAM,EAAE,MAJJ;AAKJC,UAAAA,QAAQ,EAAEZ;AALN;AAD4D,OAAhD,CAAxB;AASAG,MAAAA,UAAU,CAACE,IAAI,CAACQ,KAAL,CAAWT,MAAZ,CAAV;AACH,KAXD;;AAaAU,IAAAA,UAAU,CAAC,MAAM;AACb,UAAGd,IAAH,EAAS;AACLI,QAAAA,MAAM;AACT;AACJ,KAJS,EAIP,GAJO,CAAV;AAKH,GAnBQ,EAmBN,CAACJ,IAAD,CAnBM,CAAT;AAqBA,QAAMe,eAAe,GAAGb,OAAO,CAACc,GAAR,CAAaC,MAAD,IAAY;AAC5C,wBACI;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACI;AACA,UAAA,SAAS,EAAC,WADV;AAEA,UAAA,IAAI,EAAG,kCAAiCA,MAAM,CAACC,MAAO,EAFtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBACKD,MAAM,CAACE;AADZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAM,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEH,MAAM,CAACI;AAAjB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA,OAAUJ,MAAM,CAACC,MAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBuB,CAkBxB;AACA;AAnBwB,GAAxB;AAyBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,KAAK,EAAElB,IADX;AAEI,UAAA,QAAQ,EAAEsB,CAAC,IAAIrB,OAAO,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCT;AAAjC;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1ED;;GAAMhB,M;;KAAAA,M;AA4EN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n/*\nuseEffect: Allows function components to use something like lifecycle \nmethods\nwe configure the hook to run some code automatically in one of the three scenarios:\n1. when the component is rendered for the first time only\n2. when the component is rendered for the first time and whenever it renders\n3. when the component is rendered for the first time and whenever (it renders\nand when some piece of data has changed)\n*/\n\nconst Search = () => {\n    const [term, setTerm] = useState('programming');\n    const [results, setResults] = useState([]);\n\n    /*\n    Second argument of useEffect can be:\n    1. nothing: run at initial render and after every render\n    2. empty array: run at initial render only\n    3. array with elements: run at initial render, run after every render if data has changed\n    */\n\n    // we cannot use async and await keywords in the useEffect function\n\n    useEffect(() => {\n        const search = async () => {\n            const { data } =  await axios.get('https://en.wikipedia.org/w/api.php', {\n                params: {\n                    action: 'query',\n                    list: 'search',\n                    origin: '*',\n                    format: 'json',\n                    srsearch: term\n                },\n            });\n            setResults(data.query.search);\n        }\n\n        setTimeout(() => {\n            if(term) {\n                search();\n            }\n        }, 500);\n    }, [term]);\n\n    const renderedResults = results.map((result) => {\n        return (\n            <div key={result.pageid} className=\"item\">\n                <div className=\"right floated content\">\n                    <a \n                    className=\"ui button\"\n                    href={`https://en.wikipedia.org?curid=${result.pageid}`}\n                    >Go</a>\n                </div>\n                <div className=\"content\">\n                    <div className=\"header\">\n                        {result.title}\n                    </div>\n                    <span dangerouslySetInnerHTML={{ __html: result.snippet }}></span>\n                </div>\n            </div>\n        )\n    } \n    // __html: XSS Attack : can be used to run maliciously injected html\n    // only use this one with trusted contents\n\n\n\n    )\n\n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"field\">\n                    <label>Enter Search Term</label>\n                    <input\n                        value={term}\n                        onChange={e => setTerm(e.target.value)}\n                        className=\"input\"\n                    />\n                </div>\n            </div>\n            <div className=\"ui celled list\">{renderedResults}</div>\n        </div>\n    );\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}