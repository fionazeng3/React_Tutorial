{"ast":null,"code":"var _jsxFileName = \"/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n/*\nuseEffect: Allows function components to use something like lifecycle \nmethods\nwe configure the hook to run some code automatically in one of the three scenarios:\n1. when the component is rendered for the first time only\n2. when the component is rendered for the first time and whenever it renders\n3. when the component is rendered for the first time and whenever (it renders\nand when some piece of data has changed)\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [term, setTerm] = useState('');\n  /*\n  Second argument of useEffect can be:\n  1. nothing: run at initial render and after every render\n  2. empty array: run at initial render only\n  3. array with elements: run at initial render, run after every render if data has changed\n  */\n\n  useEffect(() => {\n    console.log('al;sdkjf');\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Search Term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: term,\n          onChange: e => setTerm(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"yxvkfB/cC2VP6Vue+7tBcz7TPSU=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Search.js"],"names":["React","useState","useEffect","Search","term","setTerm","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA;AACJ;AACA;AACA;AACA;AACA;;AACIC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,GAFQ,CAAT;AAIA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,KAAK,EAAEH,IADX;AAEI,UAAA,QAAQ,EAAEI,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA1BD;;GAAMP,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n/*\nuseEffect: Allows function components to use something like lifecycle \nmethods\nwe configure the hook to run some code automatically in one of the three scenarios:\n1. when the component is rendered for the first time only\n2. when the component is rendered for the first time and whenever it renders\n3. when the component is rendered for the first time and whenever (it renders\nand when some piece of data has changed)\n*/\n\nconst Search = () => {\n    const [term, setTerm] = useState('');\n    /*\n    Second argument of useEffect can be:\n    1. nothing: run at initial render and after every render\n    2. empty array: run at initial render only\n    3. array with elements: run at initial render, run after every render if data has changed\n    */\n    useEffect(() => {\n        console.log('al;sdkjf');\n    }, );\n\n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"field\">\n                    <label>Enter Search Term</label>\n                    <input\n                        value={term}\n                        onChange={e => setTerm(e.target.value)}\n                        className=\"input\"\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}