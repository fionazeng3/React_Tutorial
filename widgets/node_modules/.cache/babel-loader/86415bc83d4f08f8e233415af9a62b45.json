{"ast":null,"code":"var _jsxFileName = \"/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\n/*\nuseRef\nHelp to make use of direct reference to a DOM element\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    /*\n    Event Bubbling:\n    When click happen, react send the click event to all the onClick\n    listeners to the all the parent component's event handlers.\n     document.body is the component of the highest hiearchy(most parent)\n     Mannually added event handlers(what we did in here) is the first event handler to invoke\n    */\n    const onBodyClick = event => {\n      if (ref.current.contains(event.target)) {\n        // see if object we click on is inside of our component\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener('click', onBodyClick); // clean up function\n    // called when the dropdown component is removed from the dom\n\n    return () => {\n      document.body.removeEventListener('click', onBodyClick);\n    };\n  }, []); // run at initial render only\n\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Select a Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOpen(!open),\n        className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `menu ${open ? 'visible transition' : ''}`,\n          children: renderedOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"wl9VvfhnMVWQ+kCekFjcRPEi3/0=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Dropdown.js"],"names":["React","useState","useEffect","useRef","Dropdown","options","selected","onSelectedChange","open","setOpen","ref","onBodyClick","event","current","contains","target","document","body","addEventListener","removeEventListener","renderedOptions","map","option","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAAA;;AAC1D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGP,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACR;AACA;AACA;AACA;AACA;AACA;AAGQ,UAAMS,WAAW,GAAIC,KAAD,IAAW;AAC3B,UAAGF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAH,EAAuC;AAAE;AACrC;AACH;;AACDN,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KALD;;AAMAO,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCP,WAAxC,EAhBY,CAiBZ;AACA;;AACA,WAAO,MAAM;AACTK,MAAAA,QAAQ,CAACC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2CR,WAA3C;AACH,KAFD;AAGH,GAtBQ,EAsBN,EAtBM,CAAT,CAJ0D,CA0BlD;;AAER,QAAMS,eAAe,GAAGf,OAAO,CAACgB,GAAR,CAAaC,MAAD,IAAY;AAC5C,QAAIA,MAAM,CAACC,KAAP,KAAiBjB,QAAQ,CAACiB,KAA9B,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,wBACI;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,OAAO,EAAE,MAAMhB,gBAAgB,CAACe,MAAD,CAHnC;AAAA,gBAKKA,MAAM,CAACE;AALZ,OACSF,MAAM,CAACC,KADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAbuB,CAAxB;AAeA,sBACI;AAAK,IAAA,GAAG,EAAEb,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAD1B;AAEI,QAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAFrE;AAAA,gCAII;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF,QAAQ,CAACkB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAK,UAAA,SAAS,EAAG,QAAOhB,IAAI,GAAG,oBAAH,GAA0B,EAAG,EAAzD;AAAA,oBACKY;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA5DD;;GAAMhB,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n/*\nuseRef\nHelp to make use of direct reference to a DOM element\n*/\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\n    const [open, setOpen] = useState(false);\n    const ref = useRef();\n    \n    useEffect(() => {\n        /*\n        Event Bubbling:\n        When click happen, react send the click event to all the onClick\n        listeners to the all the parent component's event handlers.\n\n        document.body is the component of the highest hiearchy(most parent)\n\n        Mannually added event handlers(what we did in here) is the first event handler to invoke\n        */\n        const onBodyClick = (event) => {\n            if(ref.current.contains(event.target)) { // see if object we click on is inside of our component\n                return;\n            }\n            setOpen(false);\n        };\n        document.body.addEventListener('click', onBodyClick);\n        // clean up function\n        // called when the dropdown component is removed from the dom\n        return () => {\n            document.body.removeEventListener('click', onBodyClick);\n        }\n    }, []); // run at initial render only\n\n    const renderedOptions = options.map((option) => {\n        if (option.value === selected.value) {\n            return null;\n        }\n        return (\n            <div\n                key={option.value}\n                className=\"item\"\n                onClick={() => onSelectedChange(option)}\n            >\n                {option.label}\n            </div>\n        );\n    });\n\n    return (\n        <div ref={ref} className=\"ui form\">\n            <div className=\"field\">\n                <label className=\"label\">Select a Color</label>\n                <div\n                    onClick={() => setOpen(!open)}\n                    className={`ui selection dropdown ${open ? 'visible active' : ''}`}\n                >\n                    <i className=\"dropdown icon\"></i>\n                    <div className=\"text\">{selected.label}</div>\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>\n                        {renderedOptions}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}