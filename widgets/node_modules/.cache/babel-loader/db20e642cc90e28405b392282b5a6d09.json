{"ast":null,"code":"var _jsxFileName = \"/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  _s();\n\n  cont[(open, setOpen)] = useState(false);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Select a Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOpen(!open),\n        className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          children: renderedOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"Hdw5EO+DplCNBEJcNuH8tsP7WZ4=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Dropdown.js"],"names":["React","useState","Dropdown","options","selected","onSelectedChange","cont","open","setOpen","renderedOptions","map","option","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAAA;;AAC1DC,EAAAA,IAAI,EAAEC,IAAI,EAAEC,OAAR,EAAJ,GAAuBP,QAAQ,CAAC,KAAD,CAA/B;AAEA,QAAMQ,eAAe,GAAGN,OAAO,CAACO,GAAR,CAAcC,MAAD,IAAY;AAC7C,QAAGA,MAAM,CAACC,KAAP,KAAiBR,QAAQ,CAACQ,KAA7B,EAAoC;AAChC,aAAO,IAAP;AACH;;AACD,wBACI;AAEA,MAAA,SAAS,EAAC,MAFV;AAGA,MAAA,OAAO,EAAE,MAAMP,gBAAgB,CAACM,MAAD,CAH/B;AAAA,gBAKKA,MAAM,CAACE;AALZ,OACKF,MAAM,CAACC,KADZ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAbuB,CAAxB;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,OAAO,EAAE,MAAMJ,OAAO,CAAC,CAACD,IAAF,CADtB;AAEA,QAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAFjE;AAAA,gCAII;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBH,QAAQ,CAACS;AAAhC;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApCD;;GAAMP,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\n    cont [open, setOpen] = useState(false);\n\n    const renderedOptions = options.map ((option) => {\n        if(option.value === selected.value) {\n            return null;\n        }\n        return (\n            <div \n            key={option.value} \n            className=\"item\"\n            onClick={() => onSelectedChange(option)}\n            >\n                {option.label}\n            </div>\n        );\n    }\n\n    )\n    return (\n        <div className=\"ui form\">\n            <div className=\"field\">\n                <label className=\"label\">Select a Color</label>\n                <div \n                onClick={() => setOpen(!open)} \n                className={`ui selection dropdown ${open ? 'visible active' : ''}`}\n                >\n                    <i className=\"dropdown icon\"></i>\n                    <div className=\"text\">{selected.label}</div>\n                    <div className=\"menu\">\n                        {renderedOptions}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}