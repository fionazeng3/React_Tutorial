{"ast":null,"code":"var _jsxFileName = \"/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Accordion = ({\n  items\n}) => {\n  _s();\n\n  /*\n  Function that lets you use state in a function component\n  Array destructuring:\n  const colors = ['red', 'green'];\n  const [firstElement, secondElement] = colors\n  result: firstElement = 'red' secondElement = 'green'\n   useState(defaultValueOfState) returns [stateToKeepTrack, functionToUpdateState]\n  */\n  const [activeIndex, setActiveIndex] = useState(null); // after calling the setter function once, default value will be gone\n\n  const onTitleClick = index => {\n    /*\n    every time a setter function is called, the whole component(Accordion)\n    will be rerendered.\n    */\n    setActiveIndex(index);\n  };\n\n  const renderedItems = items.map((item, index) => {\n    const active = index === activeIndex ? 'active' : '';\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `title ${active}`,\n        onClick: () => onTitleClick(index),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), item.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `content ${active}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, item.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui styled accordion\",\n    children: renderedItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Accordion, \"E8kOn+IkK/htiBGEqJWkEvOqULU=\");\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/fzeng/Desktop/Study Material before work/React/widgets/src/components/Accordion.js"],"names":["React","useState","Accordion","items","activeIndex","setActiveIndex","onTitleClick","index","renderedItems","map","item","active","title","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC7B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C,CAV6B,CAUyB;;AAEtD,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACR;AACA;AACA;AACQF,IAAAA,cAAc,CAACE,KAAD,CAAd;AACH,GAND;;AAQA,QAAMC,aAAa,GAAGL,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOH,KAAP,KAAiB;AAC7C,UAAMI,MAAM,GAAGJ,KAAK,KAAKH,WAAV,GAAwB,QAAxB,GAAmC,EAAlD;AACA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AACI,QAAA,SAAS,EAAG,SAAQO,MAAO,EAD/B;AAEI,QAAA,OAAO,EAAE,MAAML,YAAY,CAACC,KAAD,CAF/B;AAAA,gCAII;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKKG,IAAI,CAACE,KALV;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAG,WAAUD,MAAO,EAAlC;AAAA,+BACI;AAAA,oBAAID,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,OAAqBH,IAAI,CAACE,KAA1B;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAhBqB,CAAtB;AAiBA,sBAAO;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,cACFJ;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAxCD;;GAAMN,S;;KAAAA,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n\n\nconst Accordion = ({ items }) => {\n    /*\n    Function that lets you use state in a function component\n    Array destructuring:\n    const colors = ['red', 'green'];\n    const [firstElement, secondElement] = colors\n    result: firstElement = 'red' secondElement = 'green'\n\n    useState(defaultValueOfState) returns [stateToKeepTrack, functionToUpdateState]\n    */\n    const [activeIndex, setActiveIndex] = useState(null); // after calling the setter function once, default value will be gone\n\n    const onTitleClick = (index) => {\n        /*\n        every time a setter function is called, the whole component(Accordion)\n        will be rerendered.\n        */\n        setActiveIndex(index);\n    };\n\n    const renderedItems = items.map((item, index) => {\n        const active = index === activeIndex ? 'active' : '';\n        return (\n            <React.Fragment key={item.title}>\n                <div\n                    className={`title ${active}`}\n                    onClick={() => onTitleClick(index)}\n                >\n                    <i className=\"dropdown icon\"></i>\n                    {item.title}\n                </div>\n                <div className={`content ${active}`}>\n                    <p>{item.content}</p>\n                </div>\n            </React.Fragment>\n        );\n    });\n    return <div className=\"ui styled accordion\">\n        {renderedItems}\n    </div>\n};\n\nexport default Accordion;"]},"metadata":{},"sourceType":"module"}